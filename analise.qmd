---
title: CIEPS
author: "Fernando Náufel"
date: now
date-format: "DD/MM/YYYY HH:mm"
lang: pt
execute:
  echo: false
  eval: true
  warning: true
  error: true
  include: true

# bibliography: bibliography.bib

# Português:
# csl: universidade-do-porto-faculdade-de-engenharia-chicago-pt-crono.csl

format:
  html:
    toc: true
    toc-depth: 3
    number-depth: 3
    theme:
      - journal
      - _custom.scss
    link-external-icon: false
    link-external-newwindow: true
    link-external-filter: ^(?:http:|https:)\/\/fnaufel\.github\.io
    df-print: paged
    code-link: true
    code-copy: true
    code-tools: true
    self-contained: true
    code-links:
      - text: Github
        icon: file-code
        href: https://github.com/fnaufel/analise-cieps
---

{{< include _math.qmd >}}

```{r setup, include=FALSE}
source('_setup.R')
source('functions.R')
library(gt)
```

# Sumário

Vamos comparar o desempenho, em um teste, de dois grupos de participantes:

- Pessoas que aprenderam o assunto em uma aula expositiva;
- Pessoas que aprenderam o assunto em um jogo interativo.

O teste consiste de duas partes.

Na parte 1, os dois grupos respondem às mesmas questões.

Na parte 2, o grupo da aula responde a *todas* as questões, enquanto o grupo do jogo responde a *um subconjunto* das questões.

Como os totais de questões respondidas são diferentes para os dois grupos, as *quantidades* de acertos não são a melhor maneira de comparar os desempenhos dos grupos.

Decidimos, então, calcular e comparar as médias dos *percentuais* de acertos entre os grupos.


# Dados

```{r message=FALSE}
df <- ler_dados()
# Eliminar Nan
df <- df %>%
  filter(!is.nan(pct))

nparticipantes <- nrow(df)
```

Foram lidos dados de `r nparticipantes` participantes:

```{r message=FALSE}
df %>% dfSummary() %>% print(method = 'render')
```

No sumário acima, a variável `questoes` contém a quantidade de questões (parte 1 mais parte 2) respondidas pelo participante.

Comparando os dois grupos quanto aos *percentuais* de acertos:

```{r}
df %>%
  filter(!is.nan(pct)) %>%
  group_by(tipo) %>%
  summarise(
    média = mean(pct),
    `desvio-padrão` = sd(pct)
  ) %>% 
  gt()
```

O *boxplot* abaixo mostra as diferenças entre os *percentuais* de acertos dos dois grupos:

```{r}
df %>%
  ggplot(aes(x = tipo, y = pct, fill = tipo)) +
  geom_boxplot(show.legend = FALSE) +
  labs(
    title = 'Percentual de acertos nas duas partes',
    subtitle = 'aula x jogo',
    x = NULL,
    y = '%'
  )
```

(Para interpretar *boxplots*, veja, por exemplo, esta [referência](https://pt.wikipedia.org/wiki/Diagrama_de_caixa).)


# A diferença é significativa?

Vamos fazer um *teste t* para comparar os dois grupos.

A *hipótese de nulidade* $H_0$ diz que a média dos percentuais de acertos no grupo `jogo` ($\mu_\text{jogo}$) é *igual* à média dos percentuais de acertos no grupo `aula` ($\mu_\text{aula}$):

$$
H_0 : \mu_\text{jogo} = \mu_\text{aula}
$$

A *hipótese alternativa* $H_A$ diz que a média dos percentuais de acertos no grupo `jogo` ($\mu_\text{jogo}$) é *maior* do que a média dos percentuais de acertos no grupo `aula` ($\mu_\text{aula}$):

$$
H_A : \mu_\text{jogo} > \mu_\text{aula}
$$

```{r}
t <- t.test(
  df %>% filter(tipo == 'jogo') %>% pull(pct),
  df %>% filter(tipo == 'aula') %>% pull(pct),
  alternative = 'greater',
  var.equal = TRUE
)
```

Um *teste t* com $\alpha = 0{,}01$ rejeita a hipótese de nulidade com um valor-$p$ igual a $`r t$p.value %>% fm(5)`$, mostrando que *a diferença é significativa*.

Em outras palavras: se o jogo não tivesse efeito sobre o desempenho dos participantes no teste, então uma diferença como a observada (ou maior) teria uma probabilidade muito pequena (de cerca de $`r t$p.value * 100`$%) de ocorrer.


# Mais visualizações

## Histogramas

```{r}
#| fig-height: 7
brks_barras <- seq(0, 100, 10)
brks_x <- seq(0, 100, 10)

ggplot() +
  geom_histogram(
    aes(x = pct),
    df %>% filter(tipo == 'aula'),
    breaks = brks_barras,
    fill = 'darkblue',
    alpha = .8
  ) +
  geom_histogram(
    aes(x = pct),
    df %>% filter(tipo == 'jogo'),
    breaks = brks_barras,
    fill = 'darkred',
    alpha = .8,
  ) +
  scale_x_continuous(
    breaks = brks_x,
    limits = c(0, 100)
  ) +
  scale_y_continuous(
    breaks = seq(0, 10, 2)
  ) +
  facet_wrap(
    ~ tipo,
    ncol = 1,
    axes = 'all'
  ) +
  labs(
    x = '% acertos',
    y = NULL,
    title = 'Distribuições do percentual de acertos (aula versus jogo)'
  )
```


# Densidades

```{r}
brks_x <- seq(0, 100, 10)
brks_y <- seq(0, .03, .01)

ggplot() +
  geom_density(
    aes(x = pct, color = 'aula', fill = 'aula'),
    df %>% filter(tipo == 'aula'),
    alpha = .5
  ) +
  geom_density(
    aes(x = pct, color = 'jogo', fill = 'jogo'),
    df %>% filter(tipo == 'jogo'),
    alpha = .5,
  ) +
  scale_x_continuous(
    breaks = brks_x,
    limits = c(0, 100)
  ) +
  scale_y_continuous(
    breaks = brks_y,
    limits = c(0, .03),
    labels = scales::label_number(decimal.mark = ',')
  ) +
  scale_color_discrete(
    type = c('darkblue', 'darkred')
  ) +
  scale_fill_discrete(
    type = c('darkblue', 'darkred')
  ) +
  labs(
    x = '% acertos',
    y = NULL,
    fill = NULL,
    color = NULL,
    title = 'Densidades do percentual de acertos (aula versus jogo)'
  )
```


# Pontos e barras

```{r}
t_aula <- t.test(
  df %>% filter(tipo == 'aula') %>% pull(pct)
)

t_aula
```

```{r}
media_aula <- t_aula$estimate
inf_aula <- t_aula$conf.int[1]
sup_aula <- t_aula$conf.int[2]
```

```{r}
t_jogo <- t.test(
  df %>% filter(tipo == 'jogo') %>% pull(pct)
)

t_jogo
```

```{r}
media_jogo <- t_jogo$estimate
inf_jogo <- t_jogo$conf.int[1]
sup_jogo <- t_jogo$conf.int[2]
```

```{r}
dot_bars <- tibble(
  tipo = c('aula', 'jogo'),
  media = c(media_aula, media_jogo),
  inf = c(inf_aula, inf_jogo),
  sup = c(sup_aula, sup_jogo)
)
```

```{r}
dot_bars %>% 
  ggplot() +
  geom_errorbar(
    aes(y = tipo, xmin = inf, xmax = sup, color = tipo),
    linewidth = .5,
    width = .2
  ) +
  geom_point(
    aes(y = tipo, x = media, color = tipo),
    size = 3
  ) +
  scale_x_continuous(
    limits = c(40, 80),
    breaks = seq(0, 100, 10)
  ) +
  scale_y_discrete(
    labels = NULL,
    breaks = NULL
  ) +
  scale_color_discrete(
    type = c('darkblue', 'darkred')
  ) +
  labs(
    y = NULL,
    x = '% acertos',
    color = NULL,
    title = 'Médias dos percentuais de acertos (aula versus jogo)',
    subtitle = 'com intervalos de confiança de 95%'
  ) +
  coord_flip()
```

